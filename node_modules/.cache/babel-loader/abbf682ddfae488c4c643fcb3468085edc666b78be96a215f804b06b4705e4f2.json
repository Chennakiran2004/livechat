{"ast":null,"code":"var _jsxFileName = \"/home/chenna/livechat1/livechat/src/components/Chat/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport { collection, addDoc, query, orderBy, onSnapshot, serverTimestamp } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Chat = () => {\n  _s();\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, snapshot => {\n      setMessages(snapshot.docs.map(doc => doc.data()));\n    });\n    return () => unsubscribe();\n  }, []);\n  const sendMessage = async e => {\n    e.preventDefault();\n    if (message.trim() === \"\") return;\n    await addDoc(collection(db, \"messages\"), {\n      message,\n      timestamp: serverTimestamp()\n    });\n    setMessage(\"\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: messages.map((msg, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        children: msg.message\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: sendMessage,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: message,\n        onChange: e => setMessage(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(Chat, \"r7oSiqxTwlZ7iaM02ZQHmIPeE1o=\");\n_c = Chat;\nexport default Chat;\nvar _c;\n$RefreshReg$(_c, \"Chat\");","map":{"version":3,"names":["React","useState","useEffect","db","collection","addDoc","query","orderBy","onSnapshot","serverTimestamp","jsxDEV","_jsxDEV","Chat","_s","message","setMessage","messages","setMessages","q","unsubscribe","snapshot","docs","map","doc","data","sendMessage","e","preventDefault","trim","timestamp","children","msg","index","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","value","onChange","target","_c","$RefreshReg$"],"sources":["/home/chenna/livechat1/livechat/src/components/Chat/index.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { db } from \"../../firebase\";\nimport {\n  collection,\n  addDoc,\n  query,\n  orderBy,\n  onSnapshot,\n  serverTimestamp,\n} from \"firebase/firestore\";\n\nconst Chat = () => {\n  const [message, setMessage] = useState(\"\");\n  const [messages, setMessages] = useState([]);\n\n  useEffect(() => {\n    const q = query(collection(db, \"messages\"), orderBy(\"timestamp\", \"asc\"));\n    const unsubscribe = onSnapshot(q, (snapshot) => {\n      setMessages(snapshot.docs.map((doc) => doc.data()));\n    });\n    return () => unsubscribe();\n  }, []);\n\n  const sendMessage = async (e) => {\n    e.preventDefault();\n    if (message.trim() === \"\") return;\n\n    await addDoc(collection(db, \"messages\"), {\n      message,\n      timestamp: serverTimestamp(),\n    });\n    setMessage(\"\");\n  };\n\n  return (\n    <div>\n      <div>\n        {messages.map((msg, index) => (\n          <div key={index}>{msg.message}</div>\n        ))}\n      </div>\n      <form onSubmit={sendMessage}>\n        <input\n          type=\"text\"\n          value={message}\n          onChange={(e) => setMessage(e.target.value)}\n        />\n        <button type=\"submit\">Send</button>\n      </form>\n    </div>\n  );\n};\n\nexport default Chat;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,EAAE,QAAQ,gBAAgB;AACnC,SACEC,UAAU,EACVC,MAAM,EACNC,KAAK,EACLC,OAAO,EACPC,UAAU,EACVC,eAAe,QACV,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,IAAI,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACe,QAAQ,EAAEC,WAAW,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAE5CC,SAAS,CAAC,MAAM;IACd,MAAMgB,CAAC,GAAGZ,KAAK,CAACF,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAEI,OAAO,CAAC,WAAW,EAAE,KAAK,CAAC,CAAC;IACxE,MAAMY,WAAW,GAAGX,UAAU,CAACU,CAAC,EAAGE,QAAQ,IAAK;MAC9CH,WAAW,CAACG,QAAQ,CAACC,IAAI,CAACC,GAAG,CAAEC,GAAG,IAAKA,GAAG,CAACC,IAAI,CAAC,CAAC,CAAC,CAAC;IACrD,CAAC,CAAC;IACF,OAAO,MAAML,WAAW,CAAC,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAG,MAAOC,CAAC,IAAK;IAC/BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAClB,IAAIb,OAAO,CAACc,IAAI,CAAC,CAAC,KAAK,EAAE,EAAE;IAE3B,MAAMvB,MAAM,CAACD,UAAU,CAACD,EAAE,EAAE,UAAU,CAAC,EAAE;MACvCW,OAAO;MACPe,SAAS,EAAEpB,eAAe,CAAC;IAC7B,CAAC,CAAC;IACFM,UAAU,CAAC,EAAE,CAAC;EAChB,CAAC;EAED,oBACEJ,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAAmB,QAAA,EACGd,QAAQ,CAACM,GAAG,CAAC,CAACS,GAAG,EAAEC,KAAK,kBACvBrB,OAAA;QAAAmB,QAAA,EAAkBC,GAAG,CAACjB;MAAO,GAAnBkB,KAAK;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAoB,CACpC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eACNzB,OAAA;MAAM0B,QAAQ,EAAEZ,WAAY;MAAAK,QAAA,gBAC1BnB,OAAA;QACE2B,IAAI,EAAC,MAAM;QACXC,KAAK,EAAEzB,OAAQ;QACf0B,QAAQ,EAAGd,CAAC,IAAKX,UAAU,CAACW,CAAC,CAACe,MAAM,CAACF,KAAK;MAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC7C,CAAC,eACFzB,OAAA;QAAQ2B,IAAI,EAAC,QAAQ;QAAAR,QAAA,EAAC;MAAI;QAAAG,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV,CAAC;AAACvB,EAAA,CAxCID,IAAI;AAAA8B,EAAA,GAAJ9B,IAAI;AA0CV,eAAeA,IAAI;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}